@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model TaskListModelPreview
@{
    ViewBag.Title = "TaskTree";
}

<aside class="left">
    <form action="~/Home/Create" method="get">
        <input type="submit" value="@Localizer["AddButton"]" class="button addbutton" />
    </form>


    @if (Model.Tasks.Any())
    {
        <ul style="padding-left:0">
            @foreach (var task in Model.Tasks)
            {
                <li class="line">
                    <span>
                        <button class="tasknote" value="@task.Id" onclick="show('@task.Id')">@task.Id: @task.Name</button>
                    </span>

                    @if (task.Status != Statuses.Done)
                    {
                        <span><a href="~/Home/Create/@task.Id" class="subtask">[A]</a></span>
                    }

                    <span><a href="~/Home/Update/@task.Id" class="update">[U]</a></span>

                    @if (task.Descendants == null)
                    {
                        <span><a href="~/Home/Remove/@task.Id" class="remove">[R]</a></span>
                    }
                    else
                    {
                        @await Html.PartialAsync("TreeList", task);
                    }
                </li>
            }
        </ul>
    }
    else
    {
        <p class="text">
            @Localizer["NotFound"]
        </p>
    }
</aside>

<aside class="right">
    <div class="description">
        <span class="text">@Localizer["Description"]</span>
    </div>
</aside>

<script>
    function show(id) {
        $.get({
            url: "/Home/GetTask/" + id,
            success: function (data) {
                var element = "<div class='description'><span class='text'>@Localizer["Description"]</span>{body}</div>";

                $(".description").empty();
                $(".description").replaceWith(element.replace("{body}", data));
            },
            dataType: "html"
        });
    }
</script>
